schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type IoTModelType {
  date: String
  timestamp: AWSTimestamp
}

type IoTModelTypeConnection {
  items: [IoTModelType]
  nextToken: String
}

type Mutation {
  createIoTModelType(date: String, timestamp: AWSTimestamp): AWSTimestamp @aws_cognito_user_pools @aws_iam
  deleteEvent(day: String, timestamp: AWSTimestamp): AWSTimestamp @aws_cognito_user_pools @aws_iam
  ignoreEvents(state: Boolean): Boolean @aws_cognito_user_pools @aws_iam
}

type Query {
  getIgnoreEvents(limit: Int, nextToken: String): Boolean @aws_cognito_user_pools @aws_iam
  getIoTModelType(timestamp: AWSTimestamp!): IoTModelType @aws_cognito_user_pools @aws_iam
  getTimestamps(days: [String], limit: Int, nextToken: String): [[AWSTimestamp]] @aws_cognito_user_pools @aws_iam
  listIoTModelTypes(filter: TableIoTModelTypeFilterInput, limit: Int, nextToken: String): IoTModelTypeConnection @aws_cognito_user_pools @aws_iam
}

type Subscription {
  deleteEvent: AWSTimestamp @aws_cognito_user_pools @aws_subscribe(mutations : ["deleteEvent"])
  getIgnoreEvents: Boolean @aws_cognito_user_pools @aws_subscribe(mutations : ["ignoreEvents"])
  getTimestamps: AWSTimestamp @aws_cognito_user_pools @aws_subscribe(mutations : ["createIoTModelType"])
}

type timestamps {
  timestamp: String
}

input TableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input TableFloatFilterInput {
  between: [Float]
  contains: Float
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
  notContains: Float
}

input TableIDFilterInput {
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
}

input TableIntFilterInput {
  between: [Int]
  contains: Int
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
  notContains: Int
}

input TableIoTModelTypeFilterInput {
  timestamp: TableIntFilterInput
}

input TableStringFilterInput {
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
}

input UpdateIoTModelTypeInput {
  timestamp: AWSTimestamp!
}
